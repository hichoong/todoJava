제네릭이란?
 * 컴파일 단계에서 다양한 타입을 다루는 메서드나 컬렉션 클래스에 대해 타입 체크를 해주는 기능

제네릭의 장점
 * 타입 안정성을 제공한다.
 * 타입 체크와 형변환을 생략할 수 있어 코드가 간결해 진다.

제네릭 클래스 사용시 유의할 점
 * 참조변수와 생성자에 대입된 타입이 일치해야 한다.
 * 제네릭 클래스간 상속관계에 있고, 대입된 타입이 같은 것은 괜찮다.

제한된 제네릭 클래스 사용하기
 * 제네릭 클래스로 만들어 타입을 명시해도 모든 종류의 타입을 지정할 수 있다.
 * 이를 해결할 수 있는 방법으로 제네릭타입 매개변수에 지정할 수 있는 타입의 종류를 제한할 수 있다.

와읻르 카드 : <?>
 * static 메서드의 경우 매개변수의 타입을 지정하면 다른 타입은 들어 올 수 없다.
 * 이러한 경우에 <?>를 사용하면 Object타입의 역할을 대체하게 된다.
 * 와일드 카느는 어떠한 타입도 될 수 있다.
 
 와일드카드 사용 방법
 * <? extends T> : 와일드 카드의 상한 제한 T와 그 자손들만 가능하다.
 * <? super T> : 와일드 카드의 하한 제한 T와 그 조상들만 가능하다.
 * <?> : 제한 없음, Object의 역할
